name: Run Training Pipeline

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Logging level"
        required: true
        default: "INFO"
        type: choice
        options:
          - INFO
          - DEBUG
      estimator:
        description: "Estimator type"
        required: true
        type: choice
        options:
          - log-reg
          - random-forest
      feature:
        description: "Feature extraction pipeline"
        required: true
        default: "no-pca"
        type: choice
        options:
          - no-pca
          - linear-pca

jobs:
  # this workflow contains
  # python setup, dependency installation,
  # and training pipeline run
  # the artifacts are also saved
  train:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          architecture: "x64"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run the training pipeline
        working-directory: ./ml_project
        run: |
          python pipeline.py hydra.job_logging.root.handlers=[console,file] hydra.job_logging.root.level=${{ github.event.inputs.logLevel }} estimator=${{ github.event.inputs.estimator }} feature=${{ github.event.inputs.feature }}

      - name: Save the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: training-artifacts
          path: |
            ml_project/artifacts/*.pkl
            ml_project/metrics/*.json
            ml_project/outputs/
        if: ${{ always() }}
